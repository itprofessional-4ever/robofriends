{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","key","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"oOAceA,EAZF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GACxB,OACI,yBAAKC,UAAU,uDACX,yBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACrB,6BACI,4BAAKF,GACL,2BAAIC,MCcLK,EAnBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACf,OACI,6BAEIA,EAAOC,KAAI,SAACC,EAAMC,GACd,OACI,kBAAC,EAAD,CACAC,IAAOD,EACPR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,aCEtBW,EAbG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aAC9B,OACI,yBAAKX,UAAU,OACX,2BACIA,UAAU,mCACVY,KAAK,SACLC,YAAY,gBACZC,SAAUH,MCCXI,EARA,SAACC,GACZ,OACI,yBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,UAChEJ,EAAMK,WCgBJC,E,kDAlBX,WAAYN,GAAQ,IAAD,8BACf,cAAMA,IACDO,MAAM,CACPC,UAAU,GAHC,E,qDAMnB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAAEJ,UAAW,M,oBAG/B,WACI,OAAGG,KAAKJ,MAAMC,SACH,0DAEJG,KAAKX,MAAMK,a,GAfEQ,aC2CbC,G,wDArCX,aAAc,IAAD,8BACT,gBAYJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAAElB,YAAasB,EAAMC,OAAOC,SAZ1C,EAAKX,MAAQ,CACTnB,OAAQ,GACRM,YAAa,IAJR,E,qDAQb,WAAoB,IAAD,OACfyB,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAKA,EAASC,UAC3BF,MAAK,SAAAG,GAAU,EAAKX,SAAS,CAACxB,OAAQmC,S,oBAK/C,WACI,MAAgCZ,KAAKJ,MAA7BnB,EAAR,EAAQA,OAAQM,EAAhB,EAAgBA,YACV8B,EAAiBpC,EAAOqC,QAAO,SAAAC,GACjC,OAAOA,EAAM7C,KAAK8C,cAAcC,SAASlC,EAAYiC,kBAEzD,OAAQvC,EAAOyC,OAGP,yBAAK7C,UAAU,MACX,wBAAIA,UAAU,MAAd,eACA,kBAAC,EAAD,CAAWW,aAAcgB,KAAKI,iBAC9B,kBAAC,EAAD,KACI,kBAAC,EAAD,KACI,kBAAC,EAAD,CAAU3B,OAAQoC,OAPlC,8C,GAvBMX,cCKHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,SAM1BX,K","file":"static/js/main.bbca2ae3.chunk.js","sourcesContent":["import React from 'react'\n\nconst Card = ({name, email, id}) => { \n    return (\n        <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\n            <img alt='robots' src={`https://robohash.org/${id}?200x200`} />\n            <div>\n                <h2>{name}</h2>\n                <p>{email}</p>\n            </div>\n        </div>\n    ) \n}\n\nexport default Card;\n","import React from 'react'\nimport Card from './Card'\n\nconst CardList = ({robots}) => {\n    return (\n        <div>\n        {\n            robots.map((user, i) => {\n                return (\n                    <Card \n                    key = {i} \n                    id={robots[i].id} \n                    name={robots[i].name} \n                    email={robots[i].email} \n                    />\n                )\n            })\n         }  \n        </div>\n    )\n}\n\nexport default CardList\n","import React from 'react'\n\nconst SearchBox = ({ searchfield, searchChange }) => {\n    return (\n        <div className=\"pa2\">\n            <input \n                className=\"pa3 ba b--green bg-lightest-blue\"\n                type=\"search\" \n                placeholder=\"search robots\" \n                onChange={searchChange}\n            />\n        </div>\n    )\n}\n\nexport default SearchBox\n","import React from 'react'\n\nconst Scroll = (props) => {\n    return (\n        <div style={{overflowY: 'scroll', border: '5px solid black', height: '800px'}}>\n            {props.children}\n        </div>\n    )\n}\n\nexport default Scroll\n","import React, { Component } from 'react'\n\nclass ErrorBoundary extends Component {\n    constructor(props) {\n        super(props);\n        this.state={\n            hasError: false\n        }\n    }\n    componentDidCatch(error, info) {\n        this.setState({ hasError : true })\n    }\n\n    render() {\n        if(this.state.hasError) {\n            return <h1> Ooooops. That is not good</h1>\n        }\n        return this.props.children\n    }\n}\n\nexport default ErrorBoundary\n","import React, { Component } from 'react'\nimport CardList from '../components/CardList'\nimport SearchBox from '../components/SearchBox'\nimport Scroll from '../components/Scroll'\nimport ErrorBoundary from '../components/ErrorBoundary'\nimport './App.css'\n\nclass App extends Component {\n    constructor(){\n        super()\n        this.state = {\n            robots: [],\n            searchfield: '' \n        }\n    }\n    \n    componentDidMount(){\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response =>  response.json())\n            .then(users => {this.setState({robots: users})})\n    }\n    onSearchChange = (event) => {\n        this.setState({ searchfield: event.target.value })\n    }\n    render() {\n        const { robots, searchfield } = this.state;\n        const filteredRobots = robots.filter(robot => {\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase())\n        })\n        return !robots.length ?\n            <h1>Loading...</h1> : \n            (\n                <div className=\"tc\">\n                    <h1 className=\"f1\">RoboFriends</h1>\n                    <SearchBox searchChange={this.onSearchChange} />\n                    <Scroll>\n                        <ErrorBoundary>\n                            <CardList robots={filteredRobots}/>\n                        </ErrorBoundary>\n                    </Scroll>\n                </div>\n            )\n    }   \n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}